version: 2

aliases:

  - defaults: &defaults
      docker:
        - image: circleci/node:carbon
      working_directory: ~/code
  - &restore-repo-cache
      key: shared-goodcity-repo-{{ .Environment.CIRCLE_SHA1 }}
  - &restore-yarn-cache
      keys:
        - shared-goodcity-yarn-packages-{{ checksum "yarn.lock" }}
  - &save-yarn-cache
      key: shared-goodcity-yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - node_modules
        - ~/.cache/yarn
  - &yarn
    |
      yarn install --non-interactive --cache-folder ~/.cache/yarn --frozen-lockfile
  - &restore-bower-cache
      key: shared-goodcity-bower-components-{{ checksum "bower.json" }}
  - &save-bower-cache
      key: shared-goodcity-bower-components-{{ checksum "bower.json" }}
      paths:
        - bower_components

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - save_cache:
          key: shared-goodcity-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/code

  package_dependencies:
    <<: *defaults
    steps:
      - restore-cache: *restore-repo-cache
      - restore-cache: *restore-yarn-cache
      - run: yarn link
      - run: yarn add codeclimate-test-reporter
      - run: yarn add bower
      - run: *yarn
      - save-cache: *save-yarn-cache
      - restore-cache: *restore-bower-cache
      - run: yarn run bower install
      - save-cache: *save-bower-cache

  tests:
    <<: *defaults
    docker:
      - image: circleci/node:8-browsers
    steps:
      - restore-cache: *restore-repo-cache
      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - restore-cache: *restore-bower-cache
      - run:
          name: Start Ember test server
          command: yarn run ember server --port 4203
          background: true
      - run:
          name: Wait for Ember test server to start
          command: dockerize -wait tcp://localhost:4203 -timeout 1m
      - run:
          name: Run Ember tests
          command: COVERAGE=true yarn run ember test
      - persist_to_workspace:
          root: .
          paths:
            - coverage*/lcov.info
      
  deployment:
    <<: *defaults
    steps:
      - restore-cache: *restore-repo-cache
      - restore-cache: *restore-yarn-cache
      - restore-cache: *restore-bower-cache
      - run:
          name: Setup Environment variables
          command: |
            echo 'export BRANCH_NAME=$(if [ "$CIRCLE_BRANCH" == "live" ]; then echo live; else echo master; fi)' >> $BASH_ENV
      - run:
          name: Rebuild Donor app build
          command: |
            curl \
            -H "Content-Type: application/json" \
            -d '{"branch":$BRANCH_NAME}' \
            -X POST "https://circleci.com/api/v1.1/project/github/crossroads/app.goodcity/build?circle-token=$circle_token"
      - run:
          name: Rebuild Admin app build
          command: |
            curl \
            -H '"Content-Type: application/json"' \
            -d '{"branch":$BRANCH_NAME}' \
            -X POST "https://circleci.com/api/v1.1/project/github/crossroads/admin.goodcity/build?circle-token=$circle_token"

workflows:
    version: 2
    build-test-and-deploy:
      jobs:
        - checkout_code
        - package_dependencies:
            requires:
              - checkout_code
        - tests:
            requires:
              - package_dependencies
        - deployment:
            requires:
              - tests
              - package_dependencies
            filters:
              branches:
                only: /^(master|live)$/
